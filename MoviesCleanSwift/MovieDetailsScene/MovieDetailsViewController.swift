//
//  MovieDetailsViewController.swift
//  MoviesCleanSwift
//
//  Created by Anton Gutkin on 20.01.2022.
//  Copyright (c) 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol MovieDetailsDisplayLogic: AnyObject {
    func displayMovieDetails(viewModel: MovieDetails.UI.ViewModel)
}

class MovieDetailsViewController: BaseViewController {
    @IBOutlet private var titleLabel: UILabel!
    @IBOutlet private var descriptionTextView: UITextView!
    @IBOutlet private var ratingLabel: UILabel!
    @IBOutlet private var releaseDateLabel: UILabel!
    @IBOutlet private var closeButton: UIButton!
    
    var interactor: MovieDetailsBusinessLogic?
    var router: (NSObjectProtocol & MovieDetailsRoutingLogic & MovieDetailsDataPassing)?

    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }
    
    required init?(coder: NSCoder) {
        super.init(coder: coder)
        setup()
    }
    
    override func viewDidLoad() {
        super.viewDidLoad()
        interactor?.getMovieDetails()
    }
    
    private func setup() {
        let viewController = self
        let interactor = MovieDetailsInteractor()
        let presenter = MovieDetailsPresenter()
        let router = MovieDetailsRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }
    
    private func setupUI(with configuration: MovieDetailsViewControllerConfiguration) {
        titleLabel.font = configuration.titleLabelFont
        descriptionTextView.font = configuration.descriptionTextViewFont
        ratingLabel.font = configuration.ratingLabelFont
        releaseDateLabel.font = configuration.releaseDateLabelFont
        
        closeButton.setTitle(configuration.closeButtonTitleText, for: .normal)
        closeButton.setTitleColor(.black, for: .normal)
    }
    
    @IBAction func closeButtonTapped(_ sender: Any) {
        dismiss(animated: true)
    }
}

extension MovieDetailsViewController: MovieDetailsDisplayLogic {
    func displayMovieDetails(viewModel: MovieDetails.UI.ViewModel) {
        setupUI(with: viewModel.configuration)
        
        titleLabel.text = viewModel.configuration.titleText
        descriptionTextView.text = viewModel.configuration.desriptionText
        ratingLabel.text = viewModel.configuration.ratingText
        releaseDateLabel.text = viewModel.configuration.releaseDateText
    }
}
